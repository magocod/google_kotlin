<?xml version="1.0" encoding="utf-8"?>
<!--
  ~ Copyright 2020 Google Inc. All rights reserved.
  ~
  ~ Licensed under the Apache License, Version 2.0 (the "License");
  ~ you may not use this file except in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~     http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
-->
<manifest xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:dist="http://schemas.android.com/apk/distribution"
    package="com.example.android.uamp.next"
    android:targetSandboxVersion="2"
    android:versionCode="1"
    android:versionName="1.0" >

    <uses-sdk
        android:minSdkVersion="21"
        android:targetSdkVersion="29" />

    <uses-permission android:name="android.permission.FOREGROUND_SERVICE" />
    <uses-permission android:name="android.permission.INTERNET" />
    <uses-permission android:name="android.permission.ACCESS_NETWORK_STATE" />

    <application
        android:allowBackup="true"
        android:appComponentFactory="androidx.core.app.CoreComponentFactory"
        android:debuggable="true"
        android:icon="@mipmap/ic_launcher"
        android:label="@string/app_name"
        android:roundIcon="@mipmap/ic_launcher_round"
        android:supportsRtl="true"
        android:targetSandboxVersion="2"
        android:testOnly="true"
        android:theme="@style/AppTheme" >

        <!-- Enable instant app support -->
        <dist:module dist:instant="true" />

        <!-- Declare that UAMP supports Android Auto. -->
        <meta-data
            android:name="com.google.android.gms.car.application"
            android:resource="@xml/automotive_app_desc" />

        <activity android:name="com.example.android.uamp.MainActivity" >
            <intent-filter>
                <action android:name="android.intent.action.MAIN" />

                <category android:name="android.intent.category.LAUNCHER" />
            </intent-filter>

            <!-- App links for http -->
            <intent-filter>
                <action android:name="android.intent.action.VIEW" />

                <category android:name="android.intent.category.DEFAULT" />
                <category android:name="android.intent.category.BROWSABLE" />

                <data
                    android:host="example.android.com"
                    android:pathPattern="/uamp"
                    android:scheme="http" />
            </intent-filter>

            <!-- App links for https -->
            <intent-filter>
                <action android:name="android.intent.action.VIEW" />

                <category android:name="android.intent.category.DEFAULT" />
                <category android:name="android.intent.category.BROWSABLE" />

                <data
                    android:host="example.android.com"
                    android:pathPattern="/uamp"
                    android:scheme="https" />
            </intent-filter>
        </activity>

        <!--
        Declare the common MediaBrowserService for use in the mobile app, including
        with the Android Auto app.
        -->
        <service
            android:name="com.example.android.uamp.media.MusicService"
            android:enabled="true"
            android:exported="true" >
            <intent-filter>
                <action android:name="android.media.browse.MediaBrowserService" />
            </intent-filter>
            <intent-filter>
                <action android:name="android.media.action.MEDIA_PLAY_FROM_SEARCH" />
            </intent-filter>
        </service>

        <!--
             MediaSession, prior to API 21, uses a broadcast receiver to communicate with a
             media session. It does not have to be this broadcast receiver, but it must
             handle the action "android.intent.action.MEDIA_BUTTON".

             Additionally, this is used to resume the service from an inactive state upon
             receiving a media button event (such as "play").
        -->
        <receiver android:name="androidx.media.session.MediaButtonReceiver" >
            <intent-filter>
                <action android:name="android.intent.action.MEDIA_BUTTON" />
            </intent-filter>
        </receiver>

        <provider
            android:name="com.example.android.uamp.media.library.AlbumArtContentProvider"
            android:authorities="com.example.android.uamp.media.library.provider"
            android:exported="true" />
        <provider
            android:name="androidx.lifecycle.ProcessLifecycleOwnerInitializer"
            android:authorities="com.example.android.uamp.next.lifecycle-process"
            android:exported="false"
            android:multiprocess="true" />
    </application>

</manifest>